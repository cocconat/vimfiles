# Read File Into Vector
snippet readfile
	std::vector<char> v;
	if (FILE *${2:fp} = fopen(${1:"filename"}, "r")) {
		char buf[1024];
		while (size_t len = fread(buf, 1, sizeof(buf), $2))
			v.insert(v.end(), buf, buf + len);
		fclose($2);
	}${3}
# std::map
snippet map
	std::map<${1:key}, ${2:value}> ${3:mymap};
# std::vector
snippet vector
	std::vector<${1:char}> ${2:myvec};
# Namespace
snippet namespace
	namespace ${1:`Filename('', 'my')`} {
		${2}
	}

# Class
snippet class
	class ${1:`Filename('$1', 'name')`} {
	public:
		$1(${2});
		virtual ~$1();
	};
snippet fori
	for(int ${2:i} = 0;$2 < ${1:count};++$2) {
		${4:/* code */}
	}
snippet forit
	for(auto ${1:it} = ${2:list}.begin(); $1 != $2.end(); ++$1) {
		${3:/* code */}
	}
snippet fore
	for(auto ${1:v} : ${2}) {
		${3:/* code */}
	}
snippet enum
	enum ${1:MyEnum} {
		${2}
	};
snippet ifndef
	#ifndef ${1:`toupper(Filename('$1', 'NAME'))`}_H
	#define $1_H
	${2}
	#endif
snippet inc
	#include <${1:iostream}>${2}
